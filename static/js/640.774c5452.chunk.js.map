{"version":3,"file":"static/js/640.774c5452.chunk.js","mappings":"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","sources":["webpack://social-network/./src/Components/Profile/Profile.module.css?f51d","webpack://social-network/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://social-network/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","webpack://social-network/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileData/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","Components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__n+LxT\"};","// extracted by mini-css-extract-plugin\nexport default {\"newPostForm\":\"MyPosts_newPostForm__7OkJy\",\"postsBlock\":\"MyPosts_postsBlock__xF1+G\",\"posts\":\"MyPosts_posts__qWDsY\",\"blueButton\":\"MyPosts_blueButton__CybSN\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__G6WIJ\",\"profileImage\":\"Post_profileImage__DT8Ht\",\"postText\":\"Post_postText__8zl55\",\"likes\":\"Post_likes__4-pyj\"};","import classes from './Post.module.css'\r\n\r\nconst Post = ({ message, likesCount }) => {\r\n  return (\r\n    <div className={ classes.post }>\r\n      <img\r\n        className={ classes.profileImage }\r\n        src=\"https://cdn-icons-png.flaticon.com/512/1464/1464795.png\"\r\n        alt=\"Profile avatar\"\r\n      />\r\n      <div>\r\n        <div className={ classes.postText }>\r\n          { message }\r\n        </div>\r\n        <div className={ classes.likes }>\r\n          { likesCount }<span> likes</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import { Field, reduxForm } from 'redux-form'\rimport classes from './MyPosts.module.css'\rimport { Textarea } from '../../common/FormsControls/FormsControls'\rimport { required, maxLengthCreator } from '../../../utillities/validators/validators'\r\rconst validate = [\r  required,\r  maxLengthCreator(50)\r]\r\rconst MyPostsForm = ({ handleSubmit }) => {\r  return (\r    <form onSubmit={ handleSubmit }>\r      <div className={ classes.newPostForm }>\r        <Field component={ Textarea }\r               name=\"newPostText\"\r               placeholder=\"Enter your post text...\"\r               validate={ validate } />\r      </div>\r      <div>\r        <button className={ classes.blueButton }>Add post</button>\r      </div>\r    </form>\r  )\r}\r\rexport default reduxForm({form: \"profileMyPostsForm\"})(MyPostsForm)","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport MyPostsForm from './MyPostsForm'\r\n\r\nconst MyPosts = React.memo(props => {\r\n  const postsElements =\r\n    [...props.posts]\r\n      .reverse()\r\n      .map(post => <Post message={ post.message } likesCount={ post.likesCount } key={ post.id } />)\r\n\r\n  const addPost = values => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={ classes.postsBlock }>\r\n      <h3>My posts</h3>\r\n      <MyPostsForm onSubmit={ addPost } />\r\n      <div className={ classes.posts }>\r\n        { postsElements }\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts\r\n","import MyPosts from './MyPosts'\nimport { addPost } from '../../../redux/profile-reducer'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts\n  }\n}\nconst mapDispatchToProps = { addPost }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n","// extracted by mini-css-extract-plugin\nexport default {\"mr5\":\"ProfileInfo_mr5__Gb1Ad\",\"blueText\":\"ProfileInfo_blueText__aphDT\",\"profileInfo\":\"ProfileInfo_profileInfo__rys-e\",\"userAvatarContainer\":\"ProfileInfo_userAvatarContainer__n700o\",\"userAvatar\":\"ProfileInfo_userAvatar__TFwT5\",\"setUserAvatar\":\"ProfileInfo_setUserAvatar__TrEOD\",\"profileDataContainer\":\"ProfileInfo_profileDataContainer__RM+2Q\",\"profileData\":\"ProfileInfo_profileData__0LXHh\",\"status\":\"ProfileInfo_status__FQ334\",\"statusInput\":\"ProfileInfo_statusInput__-cX0T\",\"fieldsContainer\":\"ProfileInfo_fieldsContainer__069OX\",\"fieldContainer\":\"ProfileInfo_fieldContainer__49XEQ\",\"contact\":\"ProfileInfo_contact__x4Eli\",\"error\":\"ProfileInfo_error__goQFX\",\"buttonsContainer\":\"ProfileInfo_buttonsContainer__QNCkM\",\"blueButton\":\"ProfileInfo_blueButton__VqmxD\"};","import React, { useEffect, useState } from 'react'\nimport classes from '../ProfileInfo.module.css'\n\nconst ProfileStatusWithHooks = props => {\n\n  const [editMode, setEditMode] = useState(false)\n  const [status, setStatus] = useState(props.status)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  const saveChanges = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n\n  const discardChanges = () => {\n    setEditMode(false)\n  }\n\n  const onStatusChange = event => {\n    setStatus(event.currentTarget.value)\n  }\n\n  return (\n    <div>\n      { props.isOwner\n        ? <>{ editMode\n          ? <div className={ classes.status }>\n            <div>\n              <span className={ classes.blueText }>Status:</span>\n              <input type=\"text\"\n                     onChange={ onStatusChange }\n                     value={ status }\n                     autoFocus={ true }\n                     className={ classes.statusInput }\n              />\n            </div>\n            <div className={ classes.buttonsContainer }>\n              <button onClick={ saveChanges } className={ classes.blueButton } style={ { marginRight: '10px' } }>Save Changes</button>\n              <button onClick={ discardChanges } className={ classes.blueButton }>Discard Changes</button>\n            </div>\n          </div>\n          : <div className={ classes.status }>\n            <div>\n              <span className={ classes.blueText }>Status: </span>\n              <span>{ props.status || 'No status' }</span>\n            </div>\n            <button onClick={ activateEditMode } className={ classes.blueButton }>\n              <span>Change Status</span>\n            </button>\n          </div>\n        }</>\n        : <div className={ classes.status }>\n          <div>\n            <span className={ classes.blueText }>Status: </span>\n            <span>{ props.status || 'No status' }</span>\n          </div>\n        </div> }\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHooks","import classes from '../ProfileInfo.module.css'\n\nconst ProfileData = ({ profile, isOwner, activateEditMode }) => {\n  return (\n    <div className={ classes.profileData }>\n      <div className={ classes.fieldsContainer }>\n        <div>\n          <span className={ `${ classes.blueText } ${ classes.mr5 }` }>Full Name:</span>{ profile.fullName }\n        </div>\n        <div>\n          <span className={ `${ classes.blueText } ${ classes.mr5 }` }>About Me:</span>\n          { profile.aboutMe || 'No info' }\n        </div>\n        <div>\n          <span className={ `${ classes.blueText } ${ classes.mr5 }` }>Looking for a job:</span>\n          { profile.lookingForAJob ? 'Yes' : 'No' }\n        </div>\n        { profile.lookingForAJob &&\n          <div>\n            <span className={ `${ classes.blueText } ${ classes.mr5 }` }>My Professional Skills:</span>\n            { profile.lookingForAJobDescription || 'No Skills' }\n          </div> }\n        <div>\n          <span className={ `${ classes.blueText } ${ classes.mr5 }` }>Contacts:</span>\n          { Object.keys(profile.contacts)\n            .filter(key => profile.contacts[key])\n            .map(key => {\n              return (\n                <div className={ classes.contact } key={ key }>\n                  <a href={ profile.contacts[key] } target=\"_blank\">{ key }</a>\n                </div>\n              )\n            }) }\n        </div>\n      </div>\n      { isOwner &&\n        <div className={ classes.buttonsContainer }>\n          <button className={ classes.blueButton } onClick={ activateEditMode }>Edit Info</button>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ProfileData","import { Field, reduxForm } from 'redux-form'\nimport classes from '../ProfileInfo.module.css'\nimport { Input, Textarea } from '../../../common/FormsControls/FormsControls'\n\nconst ProfileDataForm = ({ contacts, discardChanges, handleSubmit, error }) => {\n  return (\n    <form className={ classes.profileData } onSubmit={ handleSubmit }>\n      <div className={ classes.fieldsContainer }>\n        <div className={ classes.fieldContainer }>\n          <label htmlFor=\"fullName\" className={ classes.blueText }>Full Name:</label>\n          <Field component={ Input }\n                 name=\"fullName\"\n                 id=\"fullName\"\n                 type=\"text\"\n                 placeholder=\"Your full name\" />\n        </div>\n        <div className={ classes.fieldContainer }>\n          <label htmlFor=\"aboutMe\" className={ classes.blueText }>About Me:</label>\n          <Field component={ Textarea }\n                 name=\"aboutMe\"\n                 id=\"aboutMe\"\n                 type=\"text\"\n                 placeholder=\"Tell about yourself\" />\n        </div>\n        <div className={ classes.fieldContainer }>\n          <label htmlFor=\"lookingForAJob\" className={ classes.blueText }>Looking For a Job:</label>\n          <Field component={ Input }\n                 name=\"lookingForAJob\"\n                 id=\"lookingForAJob\"\n                 type=\"checkbox\" />\n        </div>\n        <div className={ classes.fieldContainer }>\n          <label htmlFor=\"lookingForAJobDescription\" className={ classes.blueText }>My Professional Skills:</label>\n          <Field component={ Textarea }\n                 name=\"lookingForAJobDescription\"\n                 id=\"lookingForAJobDescription\"\n                 type=\"text\"\n                 placeholder=\"Your professional skills\" />\n        </div>\n        <div className={ classes.fieldContainer }>\n          <span className={ classes.blueText }>Contacts:</span>\n          { Object.keys(contacts)\n            .map(key => {\n                return (\n                  <div className={ classes.contact } key={ key }>\n                    <label className={ classes.blueText }>{ key }: </label>\n                    <Field component={ Input }\n                           name={ `contacts.${ key }` }\n                           id={ key }\n                           type=\"url\"\n                           placeholder={ key }/>\n                  </div>\n                )\n              }) }\n        </div>\n      </div>\n      { error &&\n        <div className={ classes.error }>\n          { error }\n        </div>\n      }\n      <div className={ classes.buttonsContainer }>\n        <button className={ classes.blueButton } style={ { marginRight: '10px' } }>\n          Save Changes\n        </button>\n        <button className={ classes.blueButton } onClick={ discardChanges }>\n          Discard Changes\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({ form: 'edit-profile-data' })(ProfileDataForm)","import { useState } from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport userAvatar from '../../../assets/images/userAvatar.png'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileData/ProfileStatusWithHooks'\r\nimport ProfileData from './ProfileData/ProfileData'\r\nimport ProfileDataForm from './ProfileData/ProfileDataForm'\r\n\r\nconst ProfileInfo = ({ profile, status, updateProfile, updateStatus, postUserAvatar, isOwner }) => {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const onUserAvatarSelected = event => {\r\n    if (event.target.files.length) {\r\n      postUserAvatar(event.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = formData => {\r\n    updateProfile(formData).then(() => {\r\n      setEditMode(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !profile\r\n          ? <Preloader />\r\n          : <div className={ classes.profileInfo }>\r\n            <div className={ classes.userAvatarContainer }>\r\n              <img src={ profile.photos.large || userAvatar } className={ classes.userAvatar } alt=\"Profile photo\" />\r\n              { isOwner &&\r\n                <label className={ `${ classes.setUserAvatar } ${ classes.blueButton }` }>\r\n                  <input type=\"file\"\r\n                         accept=\"image/png, image/jpg, image/gif, image/jpeg\"\r\n                         onChange={ onUserAvatarSelected } />\r\n                  <span>Change Avatar</span>\r\n                </label> }\r\n            </div>\r\n            <ProfileStatusWithHooks status={ status }\r\n                                    updateStatus={ updateStatus }\r\n                                    isOwner={ isOwner } />\r\n            { editMode\r\n              ? <ProfileDataForm initialValues={ profile }\r\n                                 contacts={ profile.contacts }\r\n                                 discardChanges={ () => setEditMode(false) }\r\n                                 onSubmit={ onSubmit } />\r\n              : <ProfileData profile={ profile }\r\n                             isOwner={ isOwner }\r\n                             activateEditMode={ () => setEditMode(true) } />\r\n            }\r\n          </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileInfo","import classes from './Profile.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = ({ profile, status, updateProfile, updateStatus, postUserAvatar, isOwner }) => {\r\n  return (\r\n    <section className={ classes.profile }>\r\n      <ProfileInfo profile={ profile }\r\n                   status={ status }\r\n                   updateProfile={ updateProfile }\r\n                   updateStatus={ updateStatus }\r\n                   postUserAvatar={ postUserAvatar }\r\n                   isOwner={ isOwner } />\r\n      <MyPostsContainer />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Profile","import { useEffect } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { getUserProfile, getStatus, updateProfile, updateStatus, postUserAvatar } from '../../redux/profile-reducer'\nimport Profile from './Profile'\n\nconst ProfileContainer = props => {\n  useEffect(() => {\n    let userId = props.router.params.userId\n    if (!userId) {\n      userId = props.authorisedUserId\n      if (!userId) {\n        props.history.push('/login')\n      }\n    }\n    props.getUserProfile(userId)\n    props.getStatus(userId)\n  }, [props.router.params.userId])\n\n  return (\n    <Profile profile={ props.profile }\n             status={ props.status }\n             updateProfile={ props.updateProfile }\n             updateStatus={ props.updateStatus }\n             postUserAvatar={ props.postUserAvatar }\n             isOwner={ !props.router.params.userId }\n    />\n  )\n}\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation()\n    let navigate = useNavigate()\n    let params = useParams()\n    return (\n      <Component\n        { ...props }\n        router={ { location, navigate, params } }\n      />\n    )\n  }\n\n  return ComponentWithRouterProp\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorisedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  }\n}\nconst mapDispatchToProps = { getUserProfile, getStatus, updateProfile, updateStatus, postUserAvatar }\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n)(ProfileContainer)"],"names":["message","likesCount","className","classes","src","alt","validate","required","maxLengthCreator","reduxForm","form","handleSubmit","Textarea","React","props","postsElements","posts","reverse","map","post","id","onSubmit","values","addPost","newPostText","mapDispatchToProps","connect","state","profilePage","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","isOwner","type","onChange","event","currentTarget","value","autoFocus","onClick","updateStatus","style","marginRight","profile","activateEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","filter","key","href","target","discardChanges","error","htmlFor","Field","component","Input","name","placeholder","updateProfile","postUserAvatar","photos","large","userAvatar","accept","files","length","initialValues","formData","then","Preloader","MyPostsContainer","getUserProfile","getStatus","compose","authorisedUserId","auth","userId","isAuth","Component","location","useLocation","navigate","useNavigate","params","useParams","router","history","push"],"sourceRoot":""}