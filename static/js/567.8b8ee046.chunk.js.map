{"version":3,"file":"static/js/567.8b8ee046.chunk.js","mappings":"kMACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA8F,sBAA9F,EAA6H,qBAA7H,EAAyJ,mBAAzJ,EAAuL,uBAAvL,EAA2N,yBAA3N,EAA8Q,sCAA9Q,EAAqU,6B,SCuCrU,EA/BiD,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YAClD,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsDF,EAAAA,EAAAA,UAA4B,UAAlF,eAAOG,EAAP,KAA0BC,EAA1B,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,WACbF,EAAyB,SAI3B,OAFW,OAAXL,QAAW,IAAXA,GAAAA,EAAaQ,iBAAiB,OAAQD,GAE/B,WACM,OAAXP,QAAW,IAAXA,GAAAA,EAAaS,oBAAoB,OAAQF,MAE1C,CAACP,IAUJ,OACE,iBAAKU,UAAYC,EAAjB,WACE,qBAAUC,SAAW,SAAAC,GAAK,OAAIV,EAAWU,EAAMC,cAAcC,QAASA,MAAQb,KAC9E,mBAAQc,SAA2B,OAAhBhB,GAA8C,WAAtBI,EAAiCa,QAX5D,WACbf,IAGM,OAAXF,QAAW,IAAXA,GAAAA,EAAakB,KAAKhB,GAClBC,EAAW,MAM2FO,UAAYC,EAAhH,sB,SCTN,EAdmC,SAAC,GAA+C,IAAD,IAA5CT,QAAWiB,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUlB,EAAgB,EAAhBA,QAChE,OACE,iBAAKQ,UAAYC,EAAjB,WACE,gBAAKD,UAAYC,EAAjB,UACE,gBAAKU,IAAMF,GAASG,EAAaC,IAAMD,OAEzC,iBAAKZ,UAAYC,EAAjB,WACE,gBAAKD,UAAYC,EAAjB,SAAsCS,KACtC,gBAAKV,UAAYC,EAAjB,SAAqCT,WC2C7C,EAlDqB,WACnB,OAAsCD,EAAAA,EAAAA,UAA2B,MAAjE,eAAOD,EAAP,KAAoBwB,EAApB,KACA,GAAgCvB,EAAAA,EAAAA,UAAyB,IAAzD,eAAOwB,EAAP,KAAiBC,EAAjB,KAoCA,OAlCApB,EAAAA,EAAAA,YAAU,WACR,IAAIqB,EACEC,EAAU,WACdC,WAAWC,EAAqB,MAE5BA,EAAsB,WAAO,IAAD,IACvB,QAAT,EAAAH,SAAA,SAAWlB,oBAAoB,QAASmB,GAC/B,QAAT,EAAAD,SAAA,SAAWI,SAEXJ,EAAY,IAAIK,UAAU,iEAChBxB,iBAAiB,QAASoB,GACpCJ,EAAeG,IAKjB,OAFAG,IAEO,WACLH,EAAUlB,oBAAoB,QAASmB,GACvCD,EAAUI,WAEX,KAEHzB,EAAAA,EAAAA,YAAU,WACR,IAAM2B,EAAY,SAACpB,GACjB,IAAMqB,EAAcC,KAAKC,MAAMvB,EAAMwB,MACrC,OAAOX,GAAY,SAAAY,GAAY,wBAAQA,IAAR,OAAyBJ,QAI1D,OAFW,OAAXlC,QAAW,IAAXA,GAAAA,EAAaQ,iBAAiB,UAAWyB,GAElC,WACM,OAAXjC,QAAW,IAAXA,GAAAA,EAAaS,oBAAoB,UAAWwB,MAE7C,CAACjC,KAGF,qBAASU,UAAYC,EAArB,WACE,gBAAKD,UAAYC,EAAjB,SACIc,EAASc,KAAI,SAACrC,EAASsC,GAAV,OAAoB,SAAC,EAAD,CAAStC,QAAUA,GAAgBsC,SAExE,gBAAK9B,UAAYC,EAAjB,UACE,SAAC,EAAD,CAAgBX,YAAcA","sources":["webpack://social-network/./src/components/Chat/Chat.module.css?f66a","components/Chat/AddMessageForm.tsx","components/Chat/Message.tsx","components/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"Chat_chatPage__vBaCB\",\"messages\":\"Chat_messages__UMxjL\",\"message\":\"Chat_message__ySW5b\",\"avatar\":\"Chat_avatar__bWlGc\",\"body\":\"Chat_body__flGjt\",\"userName\":\"Chat_userName__BoRkW\",\"blueButton\":\"Chat_blueButton__jLeDQ\",\"addMessageFormContainer\":\"Chat_addMessageFormContainer__wKqkF\",\"addMessageForm\":\"Chat_addMessageForm__gH2ye\"};","import { FC, useEffect, useState } from 'react'\n// @ts-ignore\nimport classes from './Chat.module.css'\n\n\ninterface IAddMessageFormProps {\n  chatHandler: WebSocket | null\n}\n\nconst AddMessageForm: FC<IAddMessageFormProps> = ({ chatHandler }) => {\n  const [message, setMessage] = useState('')\n  const [chatHandlerStatus, setOpenChatHandlerStatus] = useState<'closed' | 'open'>('closed')\n\n  useEffect(() => {\n    const onOpen = () => {\n      setOpenChatHandlerStatus('open')\n    }\n    chatHandler?.addEventListener('open', onOpen)\n\n    return () => {\n      chatHandler?.removeEventListener('open', onOpen)\n    }\n  }, [chatHandler])\n\n  const sendMessage = () => {\n    if (!message){\n      return\n    }\n    chatHandler?.send(message)\n    setMessage('')\n  }\n\n  return (\n    <div className={ classes.addMessageForm }>\n      <textarea onChange={ event => setMessage(event.currentTarget.value) } value={ message } />\n      <button disabled={ chatHandler === null || chatHandlerStatus === 'closed' } onClick={ sendMessage } className={ classes.blueButton }>Send</button>\n    </div>\n  )\n}\n\nexport default AddMessageForm","import { FC } from 'react'\n// @ts-ignore\nimport classes from './Chat.module.css'\n// @ts-ignore\nimport userAvatar from '../../assets/images/userAvatar.png'\nimport { IChatMessage } from './ChatPage'\n\n\ninterface IMessageProps {\n  message: IChatMessage\n}\n\nconst Message: FC<IMessageProps> = ({ message: { photo, userName, message } }) => {\n  return (\n    <div className={ classes.message }>\n      <div className={ classes.avatar }>\n        <img src={ photo || userAvatar } alt={ userAvatar } />\n      </div>\n      <div className={ classes.body }>\n        <div className={ classes.userName }>{ userName }</div>\n        <div className={ classes.message }>{ message }</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message","import { FC, useEffect, useState } from 'react'\n// @ts-ignore\nimport classes from './Chat.module.css'\nimport AddMessageForm from './AddMessageForm'\nimport Message from './Message'\n\nexport interface IChatMessage {\n  userId: number\n  photo: string\n  userName: string\n  message: string\n}\n\nconst ChatPage: FC = () => {\n  const [chatHandler, setChatHandler] = useState<WebSocket | null>(null)\n  const [messages, setMessages] = useState<IChatMessage[]>([])\n\n  useEffect(() => {\n    let webSocket: WebSocket\n    const onClose = () => {\n      setTimeout(createChatHandlerWS, 3000)\n    }\n    const createChatHandlerWS = () => {\n      webSocket?.removeEventListener('close', onClose)\n      webSocket?.close()\n\n      webSocket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n      webSocket.addEventListener('close', onClose)\n      setChatHandler(webSocket)\n    }\n\n    createChatHandlerWS()\n\n    return () => {\n      webSocket.removeEventListener('close', onClose)\n      webSocket.close()\n    }\n  }, [])\n\n  useEffect(() => {\n    const onMessage = (event: MessageEvent) => {\n      const newMessages = JSON.parse(event.data)\n      return setMessages(prevMessages => [...prevMessages, ...newMessages])\n    }\n    chatHandler?.addEventListener('message', onMessage)\n\n    return () => {\n      chatHandler?.removeEventListener('message', onMessage)\n    }\n  }, [chatHandler])\n\n  return (\n    <section className={ classes.chatPage }>\n      <div className={ classes.messages }>\n        { messages.map((message, index) => <Message message={ message } key={ index } />) }\n      </div>\n      <div className={ classes.addMessageFormContainer }>\n        <AddMessageForm chatHandler={ chatHandler } />\n      </div>\n    </section>\n  )\n}\n\nexport default ChatPage"],"names":["chatHandler","useState","message","setMessage","chatHandlerStatus","setOpenChatHandlerStatus","useEffect","onOpen","addEventListener","removeEventListener","className","classes","onChange","event","currentTarget","value","disabled","onClick","send","photo","userName","src","userAvatar","alt","setChatHandler","messages","setMessages","webSocket","onClose","setTimeout","createChatHandlerWS","close","WebSocket","onMessage","newMessages","JSON","parse","data","prevMessages","map","index"],"sourceRoot":""}