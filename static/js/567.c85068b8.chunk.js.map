{"version":3,"file":"static/js/567.c85068b8.chunk.js","mappings":"iOACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA8F,sBAA9F,EAA6H,qBAA7H,EAAyJ,mBAAzJ,EAAuL,uBAAvL,EAA2N,yB,SCwB3N,EAnB2B,WACzB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OACE,6BACE,qBAAUC,SAAW,SAAAC,GAAK,OAAIF,EAAWE,EAAMC,cAAcC,QAASA,MAAQL,KAC9E,mBAAQM,QAXQ,WACbN,IAGLO,EAAUC,KAAKR,GACfC,EAAW,MAMuBQ,UAAYC,EAA5C,sB,SCMN,EAdmC,SAAC,GAA+C,IAAD,IAA5CV,QAAWW,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUZ,EAAgB,EAAhBA,QAChE,OACE,iBAAKS,UAAYC,EAAjB,WACE,gBAAKD,UAAYC,EAAjB,UACE,gBAAKG,IAAMF,GAASG,EAAaC,IAAMD,OAEzC,iBAAKL,UAAYC,EAAjB,WACE,gBAAKD,UAAYC,EAAjB,SAAsCE,KACtC,gBAAKH,UAAYC,EAAjB,SAAqCV,WCPhCO,EAAY,IAAIS,UAAU,gEAsBvC,EApBqB,WACnB,OAAgCjB,EAAAA,EAAAA,UAAyB,IAAzD,eAAOkB,EAAP,KAAiBC,EAAjB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRZ,EAAUa,iBAAiB,WAAW,SAACjB,GACrC,IAAMkB,EAAcC,KAAKC,MAAMpB,EAAMqB,MACrC,OAAON,GAAY,SAAAO,GAAY,wBAAQA,IAAR,OAAyBJ,YAEzD,KAGD,qBAASZ,UAAYC,EAArB,WACE,gBAAKD,UAAYC,EAAjB,SACIO,EAASS,KAAI,SAAC1B,EAAS2B,GAAV,OAAoB,SAAC,EAAD,CAAS3B,QAAUA,GAAgB2B,SAExE,SAAC,EAAD","sources":["webpack://social-network/./src/components/Chat/Chat.module.css?f66a","components/Chat/AddMessageForm.tsx","components/Chat/Message.tsx","components/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatPage\":\"Chat_chatPage__vBaCB\",\"messages\":\"Chat_messages__UMxjL\",\"message\":\"Chat_message__ySW5b\",\"avatar\":\"Chat_avatar__bWlGc\",\"body\":\"Chat_body__flGjt\",\"userName\":\"Chat_userName__BoRkW\",\"blueButton\":\"Chat_blueButton__jLeDQ\"};","import { FC, useState } from 'react'\n// @ts-ignore\nimport classes from './Chat.module.css'\nimport { webSocket } from './ChatPage'\n\n\nconst AddMessageForm: FC = () => {\n  const [message, setMessage] = useState('')\n\n  const sendMessage = () => {\n    if (!message){\n      return\n    }\n    webSocket.send(message)\n    setMessage('')\n  }\n\n  return (\n    <form>\n      <textarea onChange={ event => setMessage(event.currentTarget.value) } value={ message } />\n      <button onClick={ sendMessage } className={ classes.blueButton }>Send</button>\n    </form>\n  )\n}\n\nexport default AddMessageForm","import { FC } from 'react'\n// @ts-ignore\nimport classes from './Chat.module.css'\n// @ts-ignore\nimport userAvatar from '../../assets/images/userAvatar.png'\nimport { IChatMessage } from './ChatPage'\n\n\ninterface IMessageProps {\n  message: IChatMessage\n}\n\nconst Message: FC<IMessageProps> = ({ message: { photo, userName, message } }) => {\n  return (\n    <div className={ classes.message }>\n      <div className={ classes.avatar }>\n        <img src={ photo || userAvatar } alt={ userAvatar } />\n      </div>\n      <div className={ classes.body }>\n        <div className={ classes.userName }>{ userName }</div>\n        <div className={ classes.message }>{ message }</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message","import { FC, useEffect, useState } from 'react'\n// @ts-ignore\nimport classes from './Chat.module.css'\nimport AddMessageForm from './AddMessageForm'\nimport Message from './Message'\n\nexport interface IChatMessage {\n  userId: number\n  photo: string\n  userName: string\n  message: string\n}\n\nexport const webSocket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n\nconst ChatPage: FC = () => {\n  const [messages, setMessages] = useState<IChatMessage[]>([])\n\n  useEffect(() => {\n    webSocket.addEventListener('message', (event: MessageEvent) => {\n      const newMessages = JSON.parse(event.data)\n      return setMessages(prevMessages => [...prevMessages, ...newMessages])\n    })\n  }, [])\n  \n  return (\n    <section className={ classes.chatPage }>\n      <div className={ classes.messages }>\n        { messages.map((message, index) => <Message message={ message } key={ index } />) }\n      </div>\n      <AddMessageForm />\n    </section>\n  )\n}\n\nexport default ChatPage"],"names":["useState","message","setMessage","onChange","event","currentTarget","value","onClick","webSocket","send","className","classes","photo","userName","src","userAvatar","alt","WebSocket","messages","setMessages","useEffect","addEventListener","newMessages","JSON","parse","data","prevMessages","map","index"],"sourceRoot":""}